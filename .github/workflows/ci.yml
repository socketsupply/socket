name: Socket CI

on:
  push:
    branches-ignore:
      - 'dev'

jobs:
  build_for_linux:
    runs-on: ubuntu-22.04
    timeout-minutes: 6

    steps:
    - uses: actions/checkout@v3

    - name: webfactory/ssh-agent
      uses: webfactory/ssh-agent@v0.5.4
      with:
        ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

    - name: Use Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 16.x
        registry-url: https://npm.pkg.github.com/
        scope: '@socketsupply'

    - name: Install Socket Runtime deps
      run: |
        sudo apt install software-properties-common at-spi2-core
        sudo add-apt-repository ppa:ubuntu-toolchain-r/test
        sudo apt install gcc-12 g++-12 libwebkit2gtk-4.1-dev

    - name: install ssc
      run: |
        ./bin/install.sh
      env:
        CXX: g++-12

    - name: Check if Socket Runtime has a correct version
      run: |
        ./bin/ci_version_check.sh

    - name: install an example app
      run: |
        git config --global user.email "devops@optool.co"
        git config --global user.name "Optool Github Actions"
        git clone --depth 1 git@github.com:socketsupply/socket-sdk-examples.git
        cd socket-sdk-examples/desktop-node-tonic-cjs/ && npm install
      env:
        CI: true
        NODE_AUTH_TOKEN: ${{ secrets.PACKAGE_PAT }}

    - name: compile example desktop
      run: |
        ssc build ./socket-sdk-examples/desktop-node-tonic-cjs/
      env:
        CI: true
        CXX: g++-12

    - name: Run example desktop tests
      run: |
        ssc run --test=1 --headless ./socket-sdk-examples/desktop-node-tonic-cjs/
      env:
        CI: true
        CXX: g++-12

  build_for_android:
    runs-on: ubuntu-22.04
    timeout-minutes: 15

    steps:
    - uses: actions/checkout@v3

    - name: Set up JDK 18
      uses: actions/setup-java@v3
      with:
        distribution: 'zulu'
        java-version: 18

    - name: Setup Android SDK
      uses: android-actions/setup-android@v2

    - name: webfactory/ssh-agent
      uses: webfactory/ssh-agent@v0.5.4
      with:
        ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

    - name: Use Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 16.x
        registry-url: https://npm.pkg.github.com/
        scope: '@socketsupply'

    - name: Install Socket Runtime deps
      run: |
        sudo apt install software-properties-common
        sudo add-apt-repository ppa:ubuntu-toolchain-r/test
        sudo apt install -y gcc-12 g++-12 libpthread-stubs0-dev

    - name: install ssc
      run: |
        ./bin/install.sh
      env:
        CXX: g++-12

    - name: Check if Socket has a correct version
      run: |
        ./bin/ci_version_check.sh

    - name: install an example app
      run: |
        git config --global user.email "devops@optool.co"
        git config --global user.name "Optool Github Actions"
        git clone --depth 1 git@github.com:socketsupply/socket-sdk-examples.git
        cd socket-sdk-examples/android-tonic && npm install
      env:
        CI: true
        NODE_AUTH_TOKEN: ${{ secrets.PACKAGE_PAT }}

    - name: compile example android app
      run: |
        ssc build --platform=android ./socket-sdk-examples/android-tonic
      env:
        CI: true
        SSC_CI: true
        CXX: g++-12

  build_for_win:
    runs-on: windows-2022
    timeout-minutes: 10

    steps:
    - uses: actions/checkout@v3
      with:
        ref: ${{ github.event.inputs.tag }}
    # The webfactory/ssh-agent module does not work on Windows anymore
    # I do not recommend touching this SSH stuff, i spend two days
    # tweaking it just to get it to work on windows -.-

    - name: Configure SSH
      run: Set-Service ssh-agent -StartupType Manual

    - name: Start SSH
      run: Start-Service ssh-agent

    - name: Add SSH key
      run: echo $env:SSH_PRIVATE_KEY | ssh-add -
      env:
        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}

    - name: Add github.com to known_hosts
      run: |
        mkdir ~/.ssh
        ssh-keyscan github.com >> ~/.ssh/known_hosts

    - name: install ssc
      run: |
        ./bin/install.ps1 dev

        echo "::add-path::$env:LOCALAPPDATA\Programs\socketsupply\bin"
        echo "$env:LOCALAPPDATA\Programs\socketsupply\bin" >> $env:GITHUB_PATH
      env:
        ACTIONS_ALLOW_UNSECURE_COMMANDS: true

    - name: Check if ssc has a correct version
      run: |
        ./bin/ci_version_check.ps1

    - name: Check ssc
      run: |
        ssc

    - name: install an example app
      run: |
        git config --global core.sshCommand "'C:\Windows\System32\OpenSSH\ssh.exe'"
        git config --global http.postBuffer 157286400
        git config --global core.compression 0

        git config --global user.email "devops@optool.co"
        git config --global user.name "Optool Github Actions"
        git clone --depth 1 git@github.com:socketsupply/socket-sdk-examples.git
        cd socket-sdk-examples/desktop-node-tonic-cjs/ && npm install
      env:
        CI: true
        NODE_AUTH_TOKEN: ${{ secrets.PACKAGE_PAT }}

    - name: compile example desktop
      run: |
        ssc build ./socket-sdk-examples/desktop-node-tonic-cjs/
      env:
        CI: true

    - name: Run example desktop tests
      run: |
        ssc run --test=1 ./socket-sdk-examples/desktop-node-tonic-cjs/
      env:
        CI: true

  build_for_mac:
    runs-on: macOS-12
    timeout-minutes: 10

    steps:
    - uses: actions/checkout@v3

    - name: webfactory/ssh-agent
      uses: webfactory/ssh-agent@v0.5.4
      with:
        ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

    - name: install automake
      run: brew install automake

    - name: Use Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 16.x
        registry-url: https://npm.pkg.github.com/
        scope: '@socketsupply'

    - name: install ssc
      run: |
        ./bin/install.sh

    - name: Check if ssc has a correct version
      run: |
        ./bin/ci_version_check.sh

    - name: install an example app
      run: |
        git config --global user.email "devops@optool.co"
        git config --global user.name "Optool Github Actions"
        git clone --depth 1 git@github.com:socketsupply/socket-sdk-examples.git
        cd socket-sdk-examples/desktop-node-tonic-cjs/ && npm install
      env:
        CI: true
        NODE_AUTH_TOKEN: ${{ secrets.PACKAGE_PAT }}

    - name: compile example desktop
      run: |
        ssc build ./socket-sdk-examples/desktop-node-tonic-cjs/
      env:
        CI: true

    - name: Run example desktop tests
      run: |
        ssc run --test=1 ./socket-sdk-examples/desktop-node-tonic-cjs/
      env:
        CI: true

  build_for_ios:
    runs-on: macOS-12
    timeout-minutes: 10

    steps:
    - uses: actions/checkout@v2

    - name: webfactory/ssh-agent
      uses: webfactory/ssh-agent@v0.5.4
      with:
        ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

    - name: install automake
      run: brew install automake

    - name: Use Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 16.x
        registry-url: https://npm.pkg.github.com/
        scope: '@socketsupply'

    - name: cross-compile
      run: |
        ./bin/install.sh ios

    - name: Check if ssc has a correct version
      run: |
        ./bin/ci_version_check.sh

    - name: install an example app
      run: |
        git config --global user.email "devops@optool.co"
        git config --global user.name "ssc Github Actions"
        git clone --depth 1 https://github.com/socketsupply/socket-sdk-examples.git
        cd socket-sdk-examples/ios-tonic/ && npm install
      env:
        CI: true
        NODE_AUTH_TOKEN: ${{ secrets.PACKAGE_PAT }}

    - name: compile example ios
      run: |
        ssc build --platform=ios-simulator ./socket-sdk-examples/ios-tonic/
      env:
        CI: true
